{"version":3,"file":"index.d826db4fc54c3f5025ec.bundle.js","mappings":"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","sources":["webpack://webpack_starter/./src/js/parts/converter.js","webpack://webpack_starter/webpack/bootstrap","webpack://webpack_starter/webpack/runtime/compat get default export","webpack://webpack_starter/webpack/runtime/define property getters","webpack://webpack_starter/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// Define an object to store references to DOM elements\r\nlet refs = {};\r\nrefs.imagePreviews = document.querySelector('.previews'); // Reference to the container for image previews\r\nrefs.fileSelector = document.querySelector('input[type=file]'); // Reference to the file input element\r\n\r\nconst optionMenu = document.querySelector(\".select-menu\"),\r\n    selectBtn = optionMenu.querySelector(\".select-btn\"),\r\n    options = optionMenu.querySelectorAll(\".option\"),\r\n    sBtn_text = optionMenu.querySelector(\".sBtn-text\");\r\n\r\nselectBtn.addEventListener(\"click\", () =>\r\n    optionMenu.classList.toggle(\"active\")\r\n);\r\n\r\noptions.forEach((option) => {\r\n    option.addEventListener(\"click\", () => {\r\n        let selectedOption = option.innerText;\r\n        sBtn_text.innerText = selectedOption;\r\n\r\n        optionMenu.classList.remove(\"active\");\r\n    });\r\n});\r\n\r\n// Function to add a new image box to the previews container\r\nfunction addImageBox(container) {\r\n    let imageBox = document.createElement(\"div\");\r\n    imageBox.classList.add('previews__el', 'shadow');\r\n    container.appendChild(imageBox);\r\n    return imageBox;\r\n}\r\n\r\nfunction processFile(file, outputFormat) {\r\n    if (!file) {\r\n        return;\r\n    }\r\n\r\n    // Validate input file type\r\n    const allowedInputFormats = ['.png', '.jpg', '.jpeg', '.webp'];\r\n    const fileExtension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();\r\n    const warning = document.querySelector('.warning');\r\n    if (!allowedInputFormats.includes(fileExtension)) {\r\n        warning.style.display = 'block'\r\n        warning.innerHTML = 'File type not supported';\r\n        return;\r\n    } else if (fileExtension === '.' + outputFormat.toLowerCase()) {\r\n        warning.style.display = 'block'\r\n        warning.innerHTML = `File can't have the same format as choosen output`;\r\n        return;\r\n    } else {\r\n        // Hide warning message if the file type and output format match\r\n        warning.style.display = 'none'\r\n    }\r\n\r\n    let imageBox = addImageBox(refs.imagePreviews); // Add a new image box\r\n\r\n    refs.imagePreviews.style.display = \"flex\"; // Display the previews container\r\n\r\n    // Load the data into an image\r\n    new Promise(function(resolve, reject) {\r\n            let rawImage = new Image();\r\n\r\n            rawImage.addEventListener(\"load\", function() {\r\n                resolve(rawImage);\r\n            });\r\n\r\n            rawImage.src = URL.createObjectURL(file);\r\n        })\r\n        .then(function(rawImage) {\r\n            // Convert image to the desired format\r\n            return new Promise(function(resolve, reject) {\r\n                let canvas = document.createElement('canvas');\r\n                let ctx = canvas.getContext(\"2d\");\r\n\r\n                canvas.width = rawImage.width;\r\n                canvas.height = rawImage.height;\r\n                ctx.drawImage(rawImage, 0, 0);\r\n\r\n                canvas.toBlob(function(blob) {\r\n                    resolve(URL.createObjectURL(blob));\r\n                }, \"image/\" + outputFormat); // Output format\r\n            });\r\n        })\r\n        .then(function(imageURL) {\r\n            // Load image for display on the page\r\n            return new Promise(function(resolve, reject) {\r\n                let scaledImg = new Image();\r\n\r\n                scaledImg.addEventListener(\"load\", function() {\r\n                    resolve({\r\n                        imageURL,\r\n                        scaledImg\r\n                    });\r\n                });\r\n\r\n                scaledImg.setAttribute(\"src\", imageURL);\r\n            });\r\n        })\r\n        .then(function(data) {\r\n            // Create link element\r\n            let imageLink = document.createElement(\"a\");\r\n            imageLink.setAttribute(\"href\", data.imageURL);\r\n            imageLink.setAttribute('download', `${file.name.slice(0, -4)}.${outputFormat}`);\r\n\r\n            let imgPreviewBox = document.createElement(\"div\");\r\n            imgPreviewBox.classList.add('previews__image');\r\n\r\n            // create description element\r\n            let desc = document.createElement(\"p\");\r\n            desc.innerHTML = `${file.name.slice(0, -4)}.${outputFormat}`;\r\n\r\n            // Create scaled image element\r\n            let scaledImg = data.scaledImg;\r\n\r\n            imgPreviewBox.appendChild(scaledImg);\r\n            imgPreviewBox.appendChild(desc);\r\n\r\n            // Append elements to imageBox\r\n            imageBox.appendChild(imgPreviewBox);\r\n            imageBox.appendChild(imageLink);\r\n        });\r\n}\r\n\r\n// Function to process multiple files\r\nfunction processFiles(files) {\r\n    const outputFormat = sBtn_text.innerText.toLowerCase(); // Get selected output format from custom select menu\r\n    for (let file of files) {\r\n        processFile(file, outputFormat); // Pass output format\r\n    }\r\n}\r\n\r\n// Event handler for file selector change\r\nfunction fileSelectorChanged() {\r\n    processFiles(refs.fileSelector.files);\r\n    refs.fileSelector.value = \"\"; // Reset file selector value after processing files\r\n}\r\n\r\nrefs.fileSelector.addEventListener(\"change\", fileSelectorChanged);\r\n\r\n// Drag and Drop functionality setup\r\nfunction dragenter(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n}\r\n\r\nfunction dragover(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n}\r\n\r\nfunction drop(callback, e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    callback(e.dataTransfer.files);\r\n}\r\n\r\nfunction setDragDrop(area, callback) {\r\n    area.addEventListener(\"dragenter\", dragenter, false);\r\n    area.addEventListener(\"dragover\", dragover, false);\r\n    area.addEventListener(\"drop\", function(e) {\r\n        drop(callback, e);\r\n    }, false);\r\n}\r\n\r\nconst dragDropArea = document.querySelector('.dropTarget');\r\nsetDragDrop(dragDropArea, processFiles); // Set up drag and drop for processing files\r\n\r\n// Function to download all processed images as a zip file\r\nfunction downloadAll() {\r\n    const imageLinks = document.querySelectorAll('.previews a');\r\n\r\n    if (imageLinks.length === 0) {\r\n        alert('No images to download');\r\n        return;\r\n    }\r\n\r\n    const zip = new JSZip(); // Create a new instance of JSZip for creating zip archive\r\n    const downloadPromises = [];\r\n\r\n    for (let i = 0; i < imageLinks.length; i++) {\r\n        const link = imageLinks[i];\r\n        const imageURL = link.getAttribute('href');\r\n        const imageName = link.getAttribute('download');\r\n        const fileName = imageName.substring(imageName.lastIndexOf('/') + 1); // Extract original file name\r\n\r\n        const downloadPromise = fetch(imageURL)\r\n            .then(response => response.blob())\r\n            .then(blob => {\r\n                zip.file(fileName, blob); // Add each image file to the zip archive\r\n            });\r\n\r\n        downloadPromises.push(downloadPromise);\r\n    }\r\n\r\n    Promise.all(downloadPromises)\r\n        .then(() => {\r\n            zip.generateAsync({\r\n                    type: 'blob'\r\n                })\r\n                .then(blob => {\r\n                    // Save the ZIP file\r\n                    const zipFileName = 'processed_images.zip';\r\n                    saveAs(blob, zipFileName); // Save the generated zip file\r\n                });\r\n        });\r\n}\r\n\r\nconst downloadAllButton = document.querySelector('#downloadAllButton');\r\ndownloadAllButton.addEventListener('click', downloadAll); // Add event listener to download all button\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["refs","imagePreviews","document","querySelector","fileSelector","optionMenu","selectBtn","options","querySelectorAll","sBtn_text","processFile","file","outputFormat","fileExtension","name","substring","lastIndexOf","toLowerCase","warning","includes","style","display","innerHTML","imageBox","container","createElement","classList","add","appendChild","addImageBox","Promise","resolve","reject","rawImage","Image","addEventListener","src","URL","createObjectURL","then","canvas","ctx","getContext","width","height","drawImage","toBlob","blob","imageURL","scaledImg","setAttribute","data","imageLink","slice","imgPreviewBox","desc","processFiles","files","innerText","toggle","forEach","option","selectedOption","remove","value","dragDropArea","area","callback","e","stopPropagation","preventDefault","dataTransfer","drop","imageLinks","length","alert","zip","JSZip","downloadPromises","i","link","getAttribute","imageName","fileName","downloadPromise","fetch","response","push","all","generateAsync","type","saveAs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}